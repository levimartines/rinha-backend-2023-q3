version: '3.9'

services:
  api1:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile
    hostname: api1
    network_mode: "host"
    environment:
      - SERVER_PORT=8080
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'

  api2:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile
    hostname: api2
    network_mode: "host"
    environment:
      - SERVER_PORT=8081
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'

  nginx:
    image: nginx:1.25.5-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.5GB'
    network_mode: "host"

  db:
    image: postgres:16.2-alpine3.19
    restart: always
    volumes:
      - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf # Mapeie o arquivo de configuração
    command: postgres -c config_file=/etc/postgresql/postgresql.conf # Use o caminho correto no comando
    network_mode: "host"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '1.5GB'
